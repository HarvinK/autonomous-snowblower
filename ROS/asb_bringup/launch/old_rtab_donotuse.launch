<launch>
 <arg name="rtabmap_args" default="" />
 <arg name="localization" default="false" />

  <!-- SLAM (robot side) -->
  <!-- SLAM (robot side) -->
  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
      <param name="frame_id"            type="string" value="base_link"/>
      <param name="subscribe_laserScan" type="bool"   value="true"/>
      <param name="use_action_for_goal" type="bool"   value="true"/>

      <remap from="scan"            to="/scan"/>
      <remap from="odom"            to="/asb_velocity_controller/odom"/> 

      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
      
      <remap from="goal_out"        to="current_goal"/>	
      <remap from="move_base"       to="/planner/move_base"/>
      <remap from="grid_map"        to="/map"/>

      <!-- RTAB-Map's parameters -->
      <param unless="$(arg localization)" name="Rtabmap/TimeThr"        type="string" value="500"/>
      <param if="$(arg localization)"     name="Mem/IncrementalMemory"  type="string" value="false"/>
      <param if="$(arg localization)"     name="Mem/InitWMWithAllNodes" type="string" value="true"/>
      <param name="RGBD/PoseScanMatching"        type="string" value="true"/>           
      <param name="RGBD/LocalRadius"             type="string" value="4"/>  
      <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
      <param name="Rtabmap/DetectionRate"        type="string" value="1"/>
      <param name="RGBD/OptimizeSlam2d"          type="string" value="true"/>
      <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="true"/>
      <param name="RGBD/OptimizeVarianceIgnored" type="string" value="false"/>
      <param name="RGBD/PlanAngularVelocity"     type="string" value="1.0"/>  <!-- preference for path traversed forward -->
      <param name="LccBow/Force2D"               type="string" value="true"/>
      <param name="LccIcp/Type"                  type="string" value="2"/>
      <param name="LccIcp2/CorrespondenceRatio"  type="string" value="0.2"/>
    </node>
  </group-->

  <!-- ROS navigation stack move_base -->
 <group ns="planner">
     <remap from="scan"                  to="/scan"/>
     <remap from="obstacles_cloud"       to="/obstacles_cloud"/>
     <remap from="ground_cloud"          to="/ground_cloud"/>
     <remap from="map"                   to="/map"/>
     <remap from="move_base_simple/goal" to="/rtabmap/goal_out"/>
        
     <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    	<rosparam file="$(find asb_navigation)/config/costmap_common_params_2d.yaml"  command="load" ns="global_costmap" />
     	<rosparam file="$(find asb_navigation)/config/costmap_common_params_2d.yaml"  command="load" ns="local_costmap" />
    	<rosparam file="$(find asb_navigation)/config/local_costmap_params.yaml"      command="load" ns="local_costmap" />
    	<rosparam file="$(find asb_navigation)/config/global_costmap_params.yaml"     command="load" ns="global_costmap"/>
    	<rosparam file="$(find asb_navigation)/config/dwa_local_planner_params.yaml" command="load" />
     </node>
  </group>

  <!-- THROTTLE, may not need this IMO Use same nodelet used by realsense2 -->
  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="data_throttle" args="load rtabmap_ros/data_throttle realsense2_camera_manager" output="screen">

      <param name="rate" type="double" value="3"/>
      <!--param name="decimation" type="int" value="$(arg decimation)"/-->
      <!--param name="approx_sync" type="bool" value="$(arg approx_sync)"/-->

      <remap from="rgb/image_in"       to="camera/color/image_raw"/>
      <remap from="depth/image_in"     to="camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info_in" to="camera/color/camera_info"/>

      <remap from="rgb/image_out"       to="throttled_image"/>
      <remap from="depth/image_out"     to="throttled_image_depth"/>
      <remap from="rgb/camera_info_out" to="throttled_camera_info"/>
    </node>

   <!-- for the planner -->
    <node pkg="nodelet" type="nodelet" name="obstacle_nodelet_manager"  args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="points_xyz_planner" args="load rtabmap_ros/point_cloud_xyz obstacle_nodelet_manager">
      <remap from="depth/image"        to="throttled_image_depth"/>
      <remap from="depth/camera_info"  to="throttled_camera_info"/>
      <remap from="cloud"              to="cloudXYZ" />.

      <param name="decimation"  type="int" value="2"/>
      <param name="max_depth"   type="double" value="6.0"/>
      <param name="voxel_size"  type="double" value="0.02"/>
    </node>
  
    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection obstacle_nodelet_manager">
      <remap from="cloud"     to="cloudXYZ"/>
      <remap from="obstacles" to="/obstacles_cloud"/>
      <remap from="ground"    to="/ground_cloud"/>

      <param name="frame_id"             type="string" value="base_link"/>		
      <param name="map_frame_id"         type="string" value="map"/>
      <param name="wait_for_transform"   type="bool" value="true"/>
      <param name="min_cluster_size"     type="int" value="20"/>
      <param name="max_obstacles_height" type="double" value="0.4"/>
      <param name="ground_normal_angle"  type="double" value="0.1"/>
    </node>

    <!-- scan from the camera -->
    <!--node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet realsense2_camera_manager">
      <remap from="image"       to="/camera/depth/image_raw"/>
      <remap from="camera_info" to="/camera/depth/camera_info"/>
      <remap from="scan"        to="/scan"/>
      <param name="range_max" type="double" value="4"/>
    </node--> 
 </group>

</launch>
