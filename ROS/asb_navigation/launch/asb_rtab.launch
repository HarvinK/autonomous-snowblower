<launch>
  <arg name="localization" default="false"/>
  <arg if="$(arg localization)" name="args"  default=""/>
  <arg unless="$(arg localization)" name="args"  default="--delete_db_on_start --Optimizer/GravitySigma 0.3"/>
  <!--arg name="wait_for_transform"  default="0.2"/--> 

  <group ns="rtabmap">
    <!-- Odometry -->
    <node pkg="rtabmap_ros" type="rgbd_odometry" name="visual_odometry" output="screen">
      <remap from="rgb/image" to="/camera/color/image_raw"/>
      <remap from="depth/image" to="/camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>

      <param name="frame_id" type="string" value="base_link"/>
      <param name="approx_sync" type="bool" value="false"/>
	    <param name="Reg/Force3DoF"           type="string" value="true"/>
	    <!--param name="GFTT/BlockSize" type="string" value="$(arg gftt_block_size)"/>
      <param name="GFTT/MinDistance" type="string" value="$(arg gftt_min_distance)"/-->
    </node>

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
      <param name="frame_id"            type="string" value="base_link"/>
      <param name="subscribe_depth"     type="bool"   value="true"/>
	    <param name="subscribe_scan"      type="bool"   value="true"/>

       <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
	    <param name="use_action_for_goal" type="bool" value="true"/>
      <remap from="move_base"           to="/planner/move_base"/>

      <!-- inputs -->
      <remap from="scan"            to="/scan"/>
      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
      
      <param name="odom_frame_id" type="string" value="odom"/>
      <remap from="odom"          to="/odom"/> <!--/asb_velocity_controller/odom-->

      <param name="approx_sync" type="bool" value="false"/>

  	  <!-- output, not sure about this-->
  	  <remap from="grid_map" to="/map"/>

      <!-- RTAB-Map's parameters -->
      <param if="$(arg localization)"     name="Mem/IncrementalMemory"  type="string" value="false"/>
      <param if="$(arg localization)"     name="Mem/InitWMWithAllNodes" type="string" value="true"/>

      <param name="Reg/Strategy"           type="string" value="2"/> <!-- 1=ICP -->
      <param name="Grid/FromDepth"         type="string" value="true"/>
      <param name="Grid/MaxGroundHeight"       type="string" value="0.2"/>
      <param name="Grid/MaxObstacleHeight"     type="string" value="1"/>
      <param name="Grid/NormalsSegmentation"   type="string" value="false"/>
      <param name="RGBD/LoopClosureReextractFeatures"   type="string" value="true"/>
      
      <!-- CHECK BOOKMARK, MAKE THIS TRUE AND DO OBSTACLE DETECTION INSTEAD OF LIDAR? -->
      <param name="Reg/Force3DoF"          type="string" value="true"/> 
      <!--param name="Optimizer/Slam2D" value="true" /-->
      
      <!--param name="RGBD/PoseScanMatching"        type="string" value="true"/>           
      <param name="RGBD/LocalRadius"             type="string" value="4"/>  
      <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
      <param name="Rtabmap/DetectionRate"        type="string" value="1"/>
      <param name="RGBD/OptimizeSlam2d"          type="string" value="true"/>
      <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="true"/>
      <param name="RGBD/OptimizeVarianceIgnored" type="string" value="false"/>
      <param name="RGBD/PlanAngularVelocity"     type="string" value="1.0"/>  
      <param name="LccBow/Force2D"               type="string" value="true"/>
      <param name="LccIcp/Type"                  type="string" value="2"/>
      <param name="LccIcp2/CorrespondenceRatio"  type="string" value="0.2"/-->
    </node>
  </group>

   <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <remap from="image"     to="/camera/aligned_depth_to_color/image_raw"/>
    <remap from="camera_info" to="/camera/depth/camera_info"/>
    <remap from="scan" to="/scan"/>
    <param name="range_max" type="double" value="4.0"/>
   </node>

  <!-- for the planner -->
  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="obstacle_nodelet_manager"  args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="points_xyz_planner" args="load rtabmap_ros/point_cloud_xyz obstacle_nodelet_manager">
      <remap from="depth/image"        to="/camera/aligned_depth_to_color/image_raw"/>
      <remap from="depth/camera_info"  to="/camera/depth/camera_info"/>
      <remap from="cloud"              to="cloudXYZ" />
      
      <!--param name="approx_sync" type="string" value="false"/-->
      <param name="decimation"  type="int" value="2"/>
      <param name="max_depth"   type="double" value="4.0"/>
      <param name="voxel_size"  type="double" value="0.02"/>
    </node>
  
    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection obstacle_nodelet_manager">
      <remap from="cloud"     to="cloudXYZ"/>
      <remap from="obstacles" to="/obstacles_cloud"/>
      <remap from="ground"    to="/ground_cloud"/>
      
      <param name="frame_id"             type="string" value="base_link"/>		
      <param name="map_frame_id"         type="string" value="/map"/>
      <param name="wait_for_transform"   type="bool" value="true"/>
    </node>
  </group>

  <!-- ROS navigation stack move_base -->
  <group ns="planner">
     <remap from="scan"                  to="/scan"/>
     <remap from="obstacles_cloud"       to="/obstacles_cloud"/>  
     <remap from="ground_cloud"          to="/ground_cloud"/>
     <remap from="map"                   to="/map"/>
     <remap from="cmd_vel"               to="/asb_velocity_controller/cmd_vel" />
     <!--remap from="move_base_simple/goal" to="/rtabmap/goal_out"/-->
        
    <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
    	<rosparam file="$(find asb_navigation)/config/costmap_common_params_2d.yaml"  command="load" ns="global_costmap" />
     	<rosparam file="$(find asb_navigation)/config/costmap_common_params_2d.yaml"  command="load" ns="local_costmap" />
    	<rosparam file="$(find asb_navigation)/config/local_costmap_params.yaml"      command="load" ns="local_costmap" />
    	<rosparam file="$(find asb_navigation)/config/global_costmap_params.yaml"     command="load" ns="global_costmap"/>
    	<rosparam file="$(find asb_navigation)/config/dwa_local_planner_params.yaml" command="load"/>
    </node>
  </group>
</launch>
